#
# Copyright (c) 2022-2023 SkyFaklist
#
# This is free software, licensed under the GPL License.
# See /LICENSE for more information.
#
# Description: Build MIUI Kernel using GitHub Actions
#

name: Build MIUI Kernel

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'true'

env:
  REPO_URL: https://github.com/SkyFaklist/android_kernel_xiaomi_sm8150.git
  REPO_BRANCH: miui
  CONFIG_FILE: .config
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  ARCH: arm64
  SUBARCH: arm64
  DEVICE: cepheus_defconfig
  CROSS_COMPILE: /workdir/toolchain/ubertc_gcc/aarch64-linux-android-8.0/bin/aarch64-linux-android-

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev unzip openjdk-8-jdk language-pack-zh-hans
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH kernel
        git clone https://bitbucket.org/jonascardoso/toolchain_aarch64_travis.git toolchain
        ln -sf /workdir/kernel $GITHUB_WORKSPACE/kernel

    - name: Set Device Code
      working-directory: /workdir/kernel
      run: |
        make O=out $DEVICE

    - name: Pre-Compile Source
      working-directory: /workdir/kernel
      run: |
        make -j$(nproc) O=out 2>&1 | tee kernel.log
        rm -rf out
        make O=out $DEVICE

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Compile Source
      working-directory: /workdir/kernel
      run: |
        make -j$(nproc) O=out 2>&1 | tee kernel.log
        ls /workdir/kernel/
        ls /workdir/kernel/*.*
       
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
